{"version":3,"sources":["validateInfo.js","useForm.js","FormSignup.js","FormSuccess.js","Form.js","App.js","index.js"],"names":["validateInfo","values","errors","username","trim","email","test","password","password2","useForm","callback","validate","useState","setValues","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","e","target","name","value","handleSubmit","preventDefault","eye","icon","faEye","FormSignup","submitForm","passwordShown","setPasswordShown","togglePasswordVisiblity","num","zxcvbn","score","barColor","console","log","className","onSubmit","type","placeholder","onChange","max","style","width","color","height","id","passwordLevel","onClick","class","href","FormSuccess","src","Form","isSubmitted","setIsSubmitted","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3a55a91.chunk.js","sourcesContent":["export default function validateInfo(values) {\n  let errors = {};\n\n  if (!values.username.trim()) {\n    errors.username = 'Username required';\n  }\n  \n\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email address is invalid';\n  }\n  if (!values.password) {\n    errors.password = 'Password is required';\n  \n  } else if ( !/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/\n  \n  .test(values.password)) {\n    errors.password = ' Special symbol required';\n  }\n\n  if (!values.password2) {\n    errors.password2 = 'Password is required';\n  } else if (values.password2 !== values.password) {\n    errors.password2 = 'Passwords do not match';\n  }\n  return errors;\n}\n","import { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({ });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  \n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n      }\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;\n","import React from 'react';\nimport validate from './validateInfo';\nimport useForm from './useForm';\nimport './Form.css';\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport zxcvbn from \"zxcvbn\";\n\nconst eye = <FontAwesomeIcon icon={faEye} />;\n\n\n\nconst FormSignup = ({ submitForm }) => {\n  const { handleChange, handleSubmit, values, errors } = useForm(\n    submitForm,\n    validate\n  );\n  const [passwordShown, setPasswordShown] = useState(false);\n  \n \n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n    \n  };\n\n  const testResult = zxcvbn(values.password)\n  const num =testResult.score * 100/4\n\n  const passwordLevel = () =>{\n    switch(num)\n    {        \n      case 0:\n        return  'Very Weak';\n\n      case 25:\n        return 'Weak';\n       \n      case 50:\n        return 'Fair';\n        \n      case 75:\n        return 'Strong';\n       \n      case 100:\n        return 'Very Strong';\n        \n      default :\n        return ''\n        \n    }\n  }\n\n\n  const barColor = () => {\n    console.log(\"test result score is \",num)\n    switch (num)\n    {\n      case 0:\n        return 'red' ;\n       \n        \n      case 25:\n        return 'blue';\n        \n\n      case 50:\n        return 'yellow';\n        \n\n      case 75:\n        return 'purple';\n        \n\n      case 100:\n        return 'green';\n        \n\n      default :\n        return ''\n        \n    }\n  }\n  const changeColor = () =>({\n    width :`${num}%`,\n    color: barColor(),\n    height :'5px',\n\n  })\n  \n\n  return (\n    <div className='form-content-right'>\n      <form onSubmit={handleSubmit} className='form'>\n        <h1>\n          Let's get started !\n        </h1>\n        <div className='form-inputs'>\n          <label className='form-label'>Username</label>\n          <input\n            \n            className='form-input'\n            type='text'\n            name='username'\n            placeholder='Enter your username'\n            value={values.username}\n            onChange={handleChange}\n          />\n          {errors.username && <p>{errors.username}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Email</label>\n          <input\n            className='form-input'\n            type='email'\n            name='email'\n            placeholder='Enter your email'\n            value={values.email}\n            onChange={handleChange}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n\n        <div className='form-inputs'>\n          <label className='form-label'>Password</label>\n          \n          <input\n            className='form-input'\n            type={passwordShown ? \"text\" : \"password\"}\n            name='password'\n            placeholder='Enter your password'\n            value={values.password}\n            onChange={handleChange}\n            \n          />\n          <progress value={num} max={num} style={changeColor() }> </progress>\n\n          <div id=\"main\">\n         <p style={{color : barColor()}  }> {passwordLevel()} </p>\n         </div>\n          {passwordShown ? <i onClick={togglePasswordVisiblity}>{eye}</i> : <i class=\"fas fa-eye-slash\" onClick={togglePasswordVisiblity}></i>} \n\n\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n       \n\n        <div className='form-inputs'>\n          <label className='form-label'>Confirm Password</label>\n          <input\n            className='form-input'\n            type='password'\n            name='password2'\n            placeholder='Confirm your password'\n            value={values.password2}\n            onChange={handleChange}\n          />\n          {errors.password2 && <p>{errors.password2}</p>}\n          \n        </div>\n\n       \n\n\n        <button className='form-input-btn' type='submit'>\n          Sign up\n        </button>\n        <span className='form-input-login'>\n          Already have an account? Login <a href='#'>here</a>\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default FormSignup;\n","import React from 'react';\nimport './Form.css';\n\nconst FormSuccess = () => {\n  return (\n    <div className='form-content-right'>\n      <h1 className='form-success'>We have received your request!</h1>\n      <img className='form-img-2' src='https://i.pinimg.com/originals/30/e0/d6/30e0d6e2db4f6b15511cdb523e7eb830.png'/>\n    </div>\n  );\n};\n\nexport default FormSuccess;\n","import React, { useState } from 'react';\nimport './Form.css';\nimport FormSignup from './FormSignup';\nimport FormSuccess from './FormSuccess';\n\nconst Form = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n  return (\n    <>\n      <div className='form-container'>\n        <span className='close-btn'>×</span>\n        <div className='form-content-left'>\n          <img className='form-img' src='https://www.mailpile.is/img/icon-512x512.png' alt='spaceship' />\n        </div>\n        {!isSubmitted ? (\n          <FormSignup submitForm={submitForm} />\n        ) : (\n          <FormSuccess />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport './App.css';\nimport Form from './Form';\n\nfunction App() {\n  return <Form />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}